# Data Modeling with Postgres: Song Play Analysis

# Introduction
A startup called **Sparkify** wants to **analyze** the data they've been collecting on **songs** and **user activity** on their new music streaming app. The analytics team is particularly interested in **understanding what songs users are listening to**. Currently, they don't have an easy way to query their data, which resides in a directory of **JSON** logs on user activity on the app, as well as a directory with JSON metadata on the songs in their app.

They'd like a data engineer to **create a Postgres database with tables designed to optimize queries on song play analysis**, and bring you on the project. Your role is to create a database schema and ETL pipeline for this analysis. You'll be able to test your database and ETL pipeline by running queries given to you by the analytics team from Sparkify and compare your results with their expected results.

# Project Description
In this project, the goal is provide a data engineering solution to do **data modeling with Postgres** and build an **ETL pipeline using Python**. Define fact and dimension tables for a star schema for a particular analytic focus, and write an ETL pipeline that transfers data from files in two local directories into these tables in Postgres using Python and SQL.

# Datasets:

## Song Dataset
Below is an example of what a single song file: JSON format and contains metadata about a song and the artist of that song TRAABJL12903CDCF1A.json, looks like.
`{"num_songs": 1, "artist_id": "ARJIE2Y1187B994AB7", "artist_latitude": null, "artist_longitude": null, "artist_location": "", "artist_name": "Line Renaud", "song_id": "SOUPIRU12A6D4FA1E1", "title": "Der Kleine Dompfaff", "duration": 152.92036, "year": 0}`

## Log Dataset
log files in JSON format generated by this event simulator based on the songs in the dataset above. These simulate activity logs from a music streaming app based on specified configurations.

And below is an example of what the data in a log file, 2018-11-12-events.json (read into pandas dataframe), looks like.
![](https://i.loli.net/2021/08/17/8YoUzgCBNTun64b.png)

## Star Schema Design:

![2021-08-16_20-14-53](https://i.loli.net/2021/08/17/GcQZ7dBNta2LeAx.png)

# Files description:
1. create_table.py this python script is used to create the Postgres database and tables within the database.
2. etl.py this python script is used to extract, transform and load the data from json files into Postgres database.
3. sql_queries.py this python script contains the sql queries that being used in other python files and jupyter notebooks. 
4. etl.ipynb, test.ipynb are jupyter notebooks used for interactive developing process, customer could use these notebooks for further development. 
5. analytics_sample.ipynb contains sample analytics queries and results, it is a free gift to our customer!

# Running instruction: 
Customer should run create_table.py at first in Terminal to create DB and tables. Then run etl.py to load the data into Postgres DB.

After the above run, customer should be able to run analytics_sample.ipynb and other analytics queries. 


